{"version":3,"file":"static/js/104.1f27f3ba.chunk.js","mappings":"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","sources":["components/Snackbar/index.tsx","pages/Users/create/UserForm.tsx","pages/Users/create/index.tsx"],"sourcesContent":["import React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nexport interface SnackbarProps {\n    openSnackbar: boolean,\n    success: boolean,\n    message: string\n}\n\ninterface Props extends SnackbarProps {\n    setOpenSnackbar: (value: boolean) => void\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction SnackbarApp({ openSnackbar, success, message, setOpenSnackbar }: Props) {\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpenSnackbar(false);\n    };\n\n    return (\n        <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity={success ? 'success' : 'error'} sx={{ width: '100%' }}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nexport default SnackbarApp\n","import React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { UserInterface } from 'src/models/users';\n\n//icons\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\ninterface UserCredentials extends UserInterface {\n    email: string;\n    password: string;\n}\n\ninterface Props {\n    userData: UserCredentials,\n    onTextChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n    onSelectChange: (event: SelectChangeEvent) => void,\n    onSubmitForm: (event: React.FormEvent<HTMLFormElement>) => void\n}\n\nfunction UserForm({ userData, onTextChange, onSelectChange, onSubmitForm }: Props) {\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    return (\n        <Card sx={{ width: '100%', padding: 3 }}>\n            <form onSubmit={event => onSubmitForm(event)}>\n                <Grid container spacing={2}>\n                    <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <TextField \n                            fullWidth\n                            required\n                            name=\"firstName\" \n                            label=\"First Name\" \n                            variant=\"outlined\"\n                            value={userData.firstName}\n                            onChange={event => onTextChange(event)}\n                        />\n                    </Grid>\n                    <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <TextField \n                            fullWidth\n                            required\n                            name=\"lastName\" \n                            label=\"Last Name\" \n                            variant=\"outlined\"\n                            value={userData.lastName}\n                            onChange={event => onTextChange(event)}\n                        />\n                    </Grid>\n                     <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <Select\n                            fullWidth\n                            required\n                            name=\"gender\"\n                            label=\"Gender\"\n                            value={userData.gender}\n                            onChange={event => onSelectChange(event)}\n                        >\n                            <MenuItem value=\"Male\">Male</MenuItem>\n                            <MenuItem value=\"Female\">Female</MenuItem>\n                        </Select>\n                    </Grid>\n                    <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <TextField \n                            fullWidth\n                            required\n                            type=\"email\"\n                            name=\"email\" \n                            label=\"User Email\" \n                            variant=\"outlined\"\n                            value={userData.email}\n                            onChange={event => onTextChange(event)}\n                        />\n                    </Grid>\n                    <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <TextField \n                            fullWidth\n                            required\n                            inputProps={{ maxLength: 13, minLength: 9 }}\n                            name=\"contact\" \n                            label=\"Contact Number\" \n                            variant=\"outlined\"\n                            value={userData.contact}\n                            onChange={event => onTextChange(event)}\n                        />\n                    </Grid>\n                    <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <TextField \n                            fullWidth\n                            required\n                            type={!showPassword ? \"password\" : \"text\"}\n                            name=\"password\" \n                            label=\"Password\" \n                            variant=\"outlined\" \n                            value={userData.password}\n                            onChange={event => onTextChange(event)}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        edge=\"end\"\n                                        onClick={e => setShowPassword(!showPassword)}\n                                        >\n                                            {!showPassword ?  <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                            }}\n                        />\n                    </Grid>\n                    <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                        <Button type=\"submit\" variant=\"contained\" fullWidth>SAVE</Button> \n                    </Grid>\n                </Grid>\n            </form>\n        </Card>\n    )\n}\n\nexport default UserForm\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useNavigate } from 'react-router-dom';\nimport { SelectChangeEvent } from '@mui/material/Select';\n\n//components \nimport UserForm from './UserForm';\nimport SnackbarApp, { SnackbarProps } from 'src/components/Snackbar';\n\n//firebase\nimport { UserInterface } from 'src/models/users';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { useFirebaseAuth } from 'src/contexts/FirebaseAuthProvider';\nimport axios from 'axios';\n\n//icons\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface UserCredentials extends UserInterface {\n    email: string;\n    password: string;\n}\n\nfunction CreateUser() {\n    const matches = useMediaQuery('(min-width:600px)');\n    const navigate = useNavigate();\n    const { database } = useFirebaseAuth();\n    const [snackbarApp, setSnackBarApp] = useState<SnackbarProps>({\n        openSnackbar: false,\n        success: true,\n        message: ''\n    });\n\n    const [userForm, setUserForm] = useState<UserCredentials>({\n        firstName: '',\n        lastName: '',\n        contact: '',\n        email: '',\n        password: '',\n        gender: 'Male',\n    });\n\n    function onTextChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        setUserForm({ ...userForm, [event.target.name]: event.target.value });\n    }\n\n    function onSelectChange(event: SelectChangeEvent) {\n        setUserForm({ ...userForm, [event.target.name]: event.target.value });\n    };\n\n    function saveUser(userId: string) {\n        const newUser: UserInterface = {\n            firstName: userForm.firstName,\n            lastName: userForm.lastName,\n            contact: userForm.contact,\n            gender: userForm.gender\n        }\n\n        setDoc(doc(database, \"accounts\", userId), newUser).then(res => {\n            navigate('/dashboards/users');\n        }).catch(err => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to save user.' });\n        })\n    }\n\n    function onSubmitForm(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n\n        const body = JSON.stringify({\n            email: userForm.email,\n            name: userForm.firstName + ' ' + userForm.lastName,\n            contact: userForm.contact,\n            password: userForm.password\n        });\n\n        axios.post('https://butiladmin.herokuapp.com/api/jsdhfyyrhv7&ggeimcv_$hrjeuifcv/user/create', body, { headers: { 'Content-Type': 'application/json'}}).then(res => {\n            const data = res.data;\n            saveUser(data.uid);\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'User alredy exist.' });\n        })\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>Create User</title>\n            </Helmet>\n            <Container maxWidth=\"sm\" sx={{ mb: 5 }}>\n                <Box sx={{ \n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        marginTop: 5,\n                        marginBottom: 3\n                }}>\n                    <Typography variant=\"h1\" color=\"primary\">Create User</Typography>\n                    {!matches ? \n                        <IconButton onClick={event => navigate('/dashboards/users')} color=\"error\">\n                            <CloseIcon />\n                        </IconButton>\n                    :\n                        <Button variant=\"contained\" color=\"error\" startIcon={<CloseIcon />} onClick={event => navigate('/dashboards/users')}>\n                            Cancel\n                        </Button> \n                    }\n                </Box>\n                \n                <UserForm userData={userForm} \n                    onTextChange={event => onTextChange(event)} \n                    onSelectChange={event => onSelectChange(event)} \n                    onSubmitForm={event => onSubmitForm(event)}\n                />\n                \n            </Container>\n            <SnackbarApp openSnackbar={snackbarApp.openSnackbar} success={snackbarApp.success} message={snackbarApp.message} setOpenSnackbar={value => setSnackBarApp({ ...snackbarApp, openSnackbar: value })} />\n        </>\n    )\n}\n\nexport default CreateUser\n"],"names":["Alert","React","props","ref","elevation","variant","openSnackbar","success","message","setOpenSnackbar","handleClose","event","reason","open","autoHideDuration","onClose","severity","sx","width","userData","onTextChange","onSelectChange","onSubmitForm","useState","showPassword","setShowPassword","padding","onSubmit","container","spacing","item","sm","md","fullWidth","required","name","label","value","firstName","onChange","lastName","gender","type","email","inputProps","maxLength","minLength","contact","password","InputProps","endAdornment","position","edge","onClick","e","matches","useMediaQuery","navigate","useNavigate","database","useFirebaseAuth","snackbarApp","setSnackBarApp","userForm","setUserForm","preventDefault","body","JSON","stringify","axios","headers","then","res","userId","newUser","setDoc","doc","catch","err","saveUser","data","uid","error","maxWidth","mb","display","justifyContent","alignItems","marginTop","marginBottom","color","startIcon","target"],"sourceRoot":""}